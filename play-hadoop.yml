---
 
 #
 # Install and configure cluster
 #

 - hosts: all
   
   vars:
     
     namenode_host: '{{hostvars["namenode"].fqdn}}' 
     secondarynamenode_host: '{{hostvars["namenode"].fqdn}}'
     manager_host: '{{hostvars["manager"].fqdn}}'
     datanode_host: '{{fqdn if ("datanode" in group_names) else "0.0.0.0"}}'     

     number_of_datanodes: '{{groups.datanode | length}}'
     data_replication_factor: '{{[2, number_of_datanodes] | min}}'
     
     stop_timeout: 6   

   tasks:
   
   - name: Unpack Hadoop binaries
     unarchive:
       copy: yes
       src: .data/hadoop-{{hadoop.version}}.tar.gz
       dest: /usr/local
       creates: /usr/local/hadoop-{{hadoop.version}}
       owner: hadoop
       group: hadoop
   
   - name: Link to /usr/local/hadoop
     file: src=/usr/local/hadoop-{{hadoop.version}} dest=/usr/local/hadoop state=link   
   
   - file: path=/var/local/hadoop state=directory mode=0775 owner=hadoop group=hadoop 
   - file: path=/var/local/hadoop/dfs state=directory mode=0775 owner=hadoop group=hadoop 
   - file: path=/var/local/hadoop/logs state=directory mode=0774 owner=hadoop group=hadoop 
   - file: path=/var/local/hadoop/run state=directory mode=0774 owner=hadoop group=hadoop 
   
   - file: path=/etc/hadoop state=directory mode=0775 owner=hadoop group=hadoop 

   - name: Set JAVA_HOME in system-wide profile
     copy: src=files/profile.d/set-java-home.sh dest=/etc/profile.d/set-java-home.sh mode=0744
   
   - name: Set HADOOP_PREFIX in system-wide profile
     copy: src=files/profile.d/set-hadoop-prefix.sh dest=/etc/profile.d/set-hadoop-prefix.sh mode=0744

   - name: Add aliases for commands starting/stoping HDFS
     lineinfile: 
       dest: ~hadoop/.profile
       line: 'alias {{item.key}}="{{item.value}}"'
     with_dict: { 'start-dfs': 'start-dfs.sh', 'stop-dfs': 'stop-dfs.sh' }
     become: yes
     become_user: hadoop
     when: '"namenode" in group_names'
   
   - name: Add aliases for commands starting/stoping YARN
     lineinfile:
       dest: ~yarn/.profile
       line: 'alias {{item.key}}="{{item.value}}"'
     with_dict: { 'start-yarn': 'start-yarn.sh', 'stop-yarn': 'stop-yarn.sh' }
     become: yes
     become_user: yarn
     when: '"manager" in group_names'

   - name: Copy default configuration under /etc/hadoop
     shell: cp -vr -u /usr/local/hadoop/etc/hadoop/* /etc/hadoop/
     become: yes
     become_user: hadoop
   
   - name: Set JAVA_HOME for Hadoop environment
     lineinfile: 
       dest: '/etc/hadoop/{{env_file}}'
       regexp: "^[#]?[\\s]*export\\s+JAVA_HOME="
       line: 'export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64'
     with_items: ['hadoop-env.sh', 'yarn-env.sh']
     vars:
       env_file: '{{item}}'
 
   - name: Set HADOOP_PID_DIR for Hadoop environment
     lineinfile:
       dest: /etc/hadoop/hadoop-env.sh
       regexp: "^[#]?export\\s+HADOOP_PID_DIR="
       line: 'export HADOOP_PID_DIR=/var/local/hadoop/run'
   
   - name: Set HADOOP_LOG_DIR for Hadoop environment
     lineinfile:
       dest: /etc/hadoop/hadoop-env.sh
       regexp: "^[#]?export\\s+HADOOP_LOG_DIR="
       line: 'export HADOOP_LOG_DIR=/var/local/hadoop/logs'
   
   - name: Set HADOOP_STOP_TIMEOUT for Hadoop environment
     lineinfile:
       dest: /etc/hadoop/hadoop-env.sh
       regexp: "^export\\s+HADOOP_STOP_TIMEOUT="
       line: 'export HADOOP_STOP_TIMEOUT={{stop_timeout}}'
   
   - name: Set YARN_PID_DIR for Yarn environment
     lineinfile:
       dest: /etc/hadoop/yarn-env.sh
       regexp: "^[#]?export\\s+YARN_PID_DIR="
       line: 'export YARN_PID_DIR=/var/local/hadoop/run'
       insertbefore: "^# Resource[\\s]*Manager specific parameters"

   - name: Set YARN_LOG_DIR for Yarn environment
     lineinfile:
       dest: /etc/hadoop/yarn-env.sh
       regexp: "^export\\s+YARN_LOG_DIR="
       line: 'export YARN_LOG_DIR=/var/local/hadoop/logs'
       insertbefore: "^# Resource[\\s]*Manager specific parameters"
   
   - name: Set YARN_STOP_TIMEOUT for Yarn environment
     lineinfile:
       dest: /etc/hadoop/yarn-env.sh
       regexp: "^export\\s+YARN_STOP_TIMEOUT="
       line: 'export YARN_STOP_TIMEOUT={{stop_timeout}}'
       insertbefore: "^# Resource[\\s]*Manager specific parameters"

   - name: Set HADOOP_MAPRED_LOG_DIR for MapReduce environment
     lineinfile:
       dest: /etc/hadoop/mapred-env.sh
       regexp: "[#]?export\\s+HADOOP_MAPRED_LOG_DIR="
       line: 'export HADOOP_MAPRED_LOG_DIR=/var/local/hadoop/logs'

   - name: Set HADOOP_MAPRED_PID_DIR for MapReduce environment
     lineinfile:
       dest: /etc/hadoop/mapred-env.sh
       regexp: "[#]?export\\s+HADOOP_MAPRED_PID_DIR="
       line: 'export HADOOP_MAPRED_PID_DIR=/var/local/hadoop/run'

   - name: Generate configuration under /etc/hadoop
     template: src=templates/etc/hadoop/{{item}} dest=/etc/hadoop/{{item}} owner=hadoop group=hadoop
     with_items:
     - 'core-site.xml'
     - 'hdfs-site.xml'
     - 'yarn-site.xml'
     - 'mapred-site.xml'
     - 'slaves'

 #
 # Format HDFS filesystem
 #
 
 - hosts: namenode

   tasks:

   - stat: path=/var/local/hadoop/dfs/name/current
     register: namenode_dir_stat_result

   - set_fact:
       namenode_is_formatted: '{{namenode_dir_stat_result.stat.isdir is defined}}'

   - name: Format HDFS filesystem
     shell: >
        . /etc/hadoop/hadoop-env.sh && ./bin/hdfs namenode -format -nonInteractive
     args:
       chdir: /usr/local/hadoop
     become: yes
     become_user: hadoop
     when: not namenode_is_formatted
